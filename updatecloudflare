#!/usr/bin/env python
"""

This will ensure that the dynamic external IP address of my Raspberry Pi is always kept up to date, and updates your CloudFlare
account with the new entry.

There are 4 definitions that need to be made:
  TOKEN: Your API token, as found in your CloudFlare account settings.
  EMAIL: The email address you use with CloudFlare.

"""

import argparse
import json
import os
import re
import sys
import urllib.request
import urllib.parse

# build argument parser
try:
    parser = argparse.ArgumentParser()
    parser.add_argument('ROOTDOM')
    parser.add_argument('SUBDOM')
    parser.add_argument('--token', dest='TOKEN', help='Cloudflare API key', required=True)
    parser.add_argument('--email', dest='EMAIL', help='Cloudflare email address', required=True)
    parsed = parser.parse_args(sys.argv[1:])
except argparse.ArgumentError:
    print("Cannot parse arguments.")
    exit(1)

# definitions
TOKEN = parsed.TOKEN
EMAIL = parsed.EMAIL
ROOTDOM = parsed.ROOTDOM # eg: example.org
SUBDOM = parsed.SUBDOM # eg: home

# fetch ip address
ip = urllib.request.urlopen('http://garbers.co.za/ip').read().decode('ascii')
match = re.match("^(\d+\.\d+\.\d+\.\d+)$", ip)
if match is not None:
    ip = match.group(0)
else:
    ip = None

# invalid ip
if not isinstance(ip, str):
    print("IP not found.")
    exit(1)

# extract the record id
post_data = {}
post_data['tkn'] = TOKEN
post_data['email'] = EMAIL
post_data['a'] = 'rec_load_all'
post_data['z'] = ROOTDOM
res = urllib.request.urlopen(
    'https://www.cloudflare.com/api_json.html',
    urllib.parse.urlencode(post_data).encode()
).read()
res = json.loads(res.decode('ascii'))

# has it been created?
found = False
try:
    for zone_entry in res['response']['recs']['objs']:
        if zone_entry['name'] == SUBDOM + '.' + ROOTDOM:
            found = True
            break
except KeyError as e:
    print("Key " + str(e) + " not found. Cannot update.")
    print(json.dumps(res, sort_keys=True, indent=2, separators=(',', ': ')))
    exit(1)

if not found:
    print("Domain '%s.%s' not found. Cannot update." % (SUBDOM, ROOTDOM))
    exit(1)

# update the entry
post_data = {}
post_data['tkn'] = TOKEN
post_data['email'] = EMAIL
post_data['a'] = 'rec_edit'
post_data['z'] = ROOTDOM
post_data['type'] = 'A'
post_data['id'] = zone_entry['rec_id']
post_data['name'] = SUBDOM
post_data['content'] = ip
post_data['ttl'] = 300
res = urllib.request.urlopen(
    'https://www.cloudflare.com/api_json.html',
    urllib.parse.urlencode(post_data).encode()
).read()
res = json.loads(res.decode('ascii'))

# check if it failed
if 'result' not in res or res['result'].lower() != 'success':
    print("Not updated:")
    print(json.dumps(res, sort_keys=True, indent=2, separators=(',', ': ')))
    exit(1)

# it worked!
print("Updated.")
